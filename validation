import numpy as np
from keras import load_model
from keras._tf_keras.keras.preprocessing.image import image
import matplotlib.pyplot as plt

# Load the trained model
model = load_model('taxiway_runway_classifier.h5')

# Function to preprocess the image and make a prediction
def predict_image(img_path):
    # Load and preprocess the image
    img = image.load_img(img_path, target_size=(150, 150))  # Resize the image to the target size
    img_array = image.img_to_array(img)  # Convert the image to a numpy array
    img_array = np.expand_dims(img_array, axis=0)  # Add an extra dimension for the batch
    img_array /= 255.0  # Normalize the image

    # Make a prediction
    prediction = model.predict(img_array)

    # Convert prediction to class label
    if prediction[0] > 0.5:
        label = "Runway"
    else:
        label = "Taxiway"
    
    # Display the image with the prediction
    plt.imshow(image.load_img(img_path))
    plt.title(f"Predicted class: {label}")
    plt.show()
    
    # Print the result
    print(f"Image: {img_path} - Predicted class: {label}")

# Example usage with a single image
img_path = 'place_path_here'  
predict_image(img_path)

# Example usage with multiple images
image_paths = [
    'path_to_image1.jpg', 
    'path_to_image2.jpg',
    'path_to_image3.jpg'
]  # Replace with the paths to your images

for img_path in image_paths:
    predict_image(img_path)
